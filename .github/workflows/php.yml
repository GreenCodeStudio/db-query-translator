name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ 8.2,8.3,8.4 ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress

      # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
      # Docs: https://getcomposer.org/doc/articles/scripts.md

      - name: Run test suite
        run: composer run-script testBasic

      - name: PhpStan
        run: composer run-script phpstan
  e2eTests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: user
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: RootRoot1
        ports:
          - 1433:1433

      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
      oracle:
        image: store/oracle/database-enterprise
        env:
          ORACLE_ALLOW_REMOTE: true
          ORACLE_HOME: /opt/oracle/product/19c/dbhome_1
          ORACLE_SID: ORCLCDB
          ORACLE_PDB: ORCLPDB1
          ORACLE_PWD: Oracle19
          ORACLE_CHARACTERSET: AL32UTF8

      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: user
          POSTGRES_DB: test_db
        ports:
          - 5432:5432

    strategy:
      matrix:
        php: [ 8.4 ]
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress

      - name: Run e2e tests
        run: composer run-script testE2E
